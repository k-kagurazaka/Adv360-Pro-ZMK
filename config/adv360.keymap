
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
        &kp GRAVE            &kp N1     &kp N2   &kp N3  &kp N4     &kp N5                   &kp ESC     &kp DELETE         &kp N6           &kp N7     &kp N8  &kp N9  &kp N0  &kp BACKSLASH
          &kp TAB  &kp SINGLE_QUOTE  &kp COMMA  &kp DOT   &kp P      &kp Y             &kp LC(SPACE)  &kp BACKSPACE          &kp F            &kp G      &kp C   &kp R   &kp L      &kp SLASH
 &kp LEFT_COMMAND             &kp A      &kp O    &kp E   &kp U      &kp I                     &mo 1          &none          &none                              &tog 2   &none          &mo 1   &kp D   &kp H   &kp T   &kp N   &kp S          &kp MINUS
 &kp LEFT_CONTROL     &kp SEMICOLON      &kp Q    &kp J   &kp K      &kp X                     &none          &none          &none            &none      &none   &none   &none          &none   &kp B   &kp M   &kp W   &kp V   &kp Z  &kp RIGHT_CONTROL
            &none             &none      &none    &none   &none  &kp SPACE            &kp LEFT_SHIFT   &kp LEFT_ALT  &kp RIGHT_ALT  &kp RIGHT_SHIFT  &kp ENTER   &none   &none          &none   &none   &none
            >;
        };

        layer_fn {
            bindings = <
 &trans           &kp F1       &kp F2                &kp F3                 &kp F4     &kp F5                    &trans          &trans      &kp F6       &kp F7  &kp F8    &kp F9  &kp F10  &kp F11
 &trans  &kp EXCLAMATION  &kp AT_SIGN        &kp LEFT_BRACE        &kp RIGHT_BRACE   &kp PLUS            &kp LANGUAGE_2  &kp LANGUAGE_1  &kp LS(F6)  &kp PAGE_UP  &kp UP  &kp HOME   &trans  &kp F12
 &trans         &kp HASH   &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL                     &none          &trans      &trans                          &none    &none    &none  &trans       &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
 &trans      &kp PERCENT    &kp CARET      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp TILDE                     &none           &none      &trans        &none   &none    &trans    &none    &none  &trans  &kp PAGE_DOWN  &kp DOWN      &none  &trans  &trans
 &trans           &trans       &trans                &trans                 &trans     &trans                    &trans          &trans      &trans       &trans  &trans    &trans   &trans   &trans  &trans         &trans
            >;
        };

        layer_Win {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                             &none       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none                       &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
  &none         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

        layer_WinFunc {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_Game {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
